<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.test.dao.TicketFlightPayInfoMapper" >
  <resultMap id="BaseResultMap" type="com.cn.test.entity.TicketFlightPayInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="payername" property="payername" jdbcType="VARCHAR" />
    <result column="payerphone" property="payerphone" jdbcType="VARCHAR" />
    <result column="payeremail" property="payeremail" jdbcType="VARCHAR" />
    <result column="payeraddress" property="payeraddress" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, payername, payerphone, payeremail, payeraddress
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cn.test.entity.TicketFlightPayInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ticket_flight_payinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from ticket_flight_payinfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ticket_flight_payinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cn.test.entity.TicketFlightPayInfoExample" >
    delete from ticket_flight_payinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cn.test.entity.TicketFlightPayInfo" >
    insert into ticket_flight_payinfo (id, payername, payerphone,
      payeremail, payeraddress)
    values (#{id,jdbcType=INTEGER}, #{payername,jdbcType=VARCHAR}, #{payerphone,jdbcType=VARCHAR},
      #{payeremail,jdbcType=VARCHAR}, #{payeraddress,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.test.entity.TicketFlightPayInfo" >
    insert into ticket_flight_payinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="payername != null" >
        payername,
      </if>
      <if test="payerphone != null" >
        payerphone,
      </if>
      <if test="payeremail != null" >
        payeremail,
      </if>
      <if test="payeraddress != null" >
        payeraddress,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="payername != null" >
        #{payername,jdbcType=VARCHAR},
      </if>
      <if test="payerphone != null" >
        #{payerphone,jdbcType=VARCHAR},
      </if>
      <if test="payeremail != null" >
        #{payeremail,jdbcType=VARCHAR},
      </if>
      <if test="payeraddress != null" >
        #{payeraddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cn.test.entity.TicketFlightPayInfoExample" resultType="java.lang.Integer" >
    select count(*) from ticket_flight_payinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ticket_flight_payinfo
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.payername != null" >
        payername = #{record.payername,jdbcType=VARCHAR},
      </if>
      <if test="record.payerphone != null" >
        payerphone = #{record.payerphone,jdbcType=VARCHAR},
      </if>
      <if test="record.payeremail != null" >
        payeremail = #{record.payeremail,jdbcType=VARCHAR},
      </if>
      <if test="record.payeraddress != null" >
        payeraddress = #{record.payeraddress,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ticket_flight_payinfo
    set id = #{record.id,jdbcType=INTEGER},
      payername = #{record.payername,jdbcType=VARCHAR},
      payerphone = #{record.payerphone,jdbcType=VARCHAR},
      payeremail = #{record.payeremail,jdbcType=VARCHAR},
      payeraddress = #{record.payeraddress,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.test.entity.TicketFlightPayInfo" >
    update ticket_flight_payinfo
    <set >
      <if test="payername != null" >
        payername = #{payername,jdbcType=VARCHAR},
      </if>
      <if test="payerphone != null" >
        payerphone = #{payerphone,jdbcType=VARCHAR},
      </if>
      <if test="payeremail != null" >
        payeremail = #{payeremail,jdbcType=VARCHAR},
      </if>
      <if test="payeraddress != null" >
        payeraddress = #{payeraddress,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.test.entity.TicketFlightPayInfo" >
    update ticket_flight_payinfo
    set payername = #{payername,jdbcType=VARCHAR},
      payerphone = #{payerphone,jdbcType=VARCHAR},
      payeremail = #{payeremail,jdbcType=VARCHAR},
      payeraddress = #{payeraddress,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
      select * from ticket_flight_payinfo
    </select>
  <select id="count" resultType="java.lang.Integer">
    select count(*) from ticket_flight_payinfo
  </select>
</mapper>
