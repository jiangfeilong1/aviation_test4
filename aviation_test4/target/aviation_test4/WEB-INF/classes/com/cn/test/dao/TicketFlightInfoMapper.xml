<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.test.dao.TicketFlightInfoMapper" >
  <resultMap id="BaseResultMap" type="com.cn.test.entity.TicketFlightInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="date" property="date" jdbcType="DATE" />
    <result column="flight" property="flight" jdbcType="INTEGER" />
    <result column="cutoff" property="cutoff" jdbcType="REAL" />
    <result column="firstclass" property="firstclass" jdbcType="INTEGER" />
    <result column="bussinessclass" property="bussinessclass" jdbcType="INTEGER" />
    <result column="touristclass" property="touristclass" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, date, flight, cutoff, firstclass, bussinessclass, touristclass
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cn.test.entity.TicketFlightInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ticket_flight_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from ticket_flight_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ticket_flight_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cn.test.entity.TicketFlightInfoExample" >
    delete from ticket_flight_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cn.test.entity.TicketFlightInfo" >
    insert into ticket_flight_info (id, date, flight,
      cutoff, firstclass, bussinessclass,
      touristclass)
    values (#{id,jdbcType=INTEGER}, #{date,jdbcType=DATE}, #{flight,jdbcType=INTEGER},
      #{cutoff,jdbcType=REAL}, #{firstclass,jdbcType=INTEGER}, #{bussinessclass,jdbcType=INTEGER},
      #{touristclass,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.test.entity.TicketFlightInfo" >
    insert into ticket_flight_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="flight != null" >
        flight,
      </if>
      <if test="cutoff != null" >
        cutoff,
      </if>
      <if test="firstclass != null" >
        firstclass,
      </if>
      <if test="bussinessclass != null" >
        bussinessclass,
      </if>
      <if test="touristclass != null" >
        touristclass,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        #{date,jdbcType=DATE},
      </if>
      <if test="flight != null" >
        #{flight,jdbcType=INTEGER},
      </if>
      <if test="cutoff != null" >
        #{cutoff,jdbcType=REAL},
      </if>
      <if test="firstclass != null" >
        #{firstclass,jdbcType=INTEGER},
      </if>
      <if test="bussinessclass != null" >
        #{bussinessclass,jdbcType=INTEGER},
      </if>
      <if test="touristclass != null" >
        #{touristclass,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cn.test.entity.TicketFlightInfoExample" resultType="java.lang.Integer" >
    select count(*) from ticket_flight_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ticket_flight_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.flight != null" >
        flight = #{record.flight,jdbcType=INTEGER},
      </if>
      <if test="record.cutoff != null" >
        cutoff = #{record.cutoff,jdbcType=REAL},
      </if>
      <if test="record.firstclass != null" >
        firstclass = #{record.firstclass,jdbcType=INTEGER},
      </if>
      <if test="record.bussinessclass != null" >
        bussinessclass = #{record.bussinessclass,jdbcType=INTEGER},
      </if>
      <if test="record.touristclass != null" >
        touristclass = #{record.touristclass,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ticket_flight_info
    set id = #{record.id,jdbcType=INTEGER},
      date = #{record.date,jdbcType=DATE},
      flight = #{record.flight,jdbcType=INTEGER},
      cutoff = #{record.cutoff,jdbcType=REAL},
      firstclass = #{record.firstclass,jdbcType=INTEGER},
      bussinessclass = #{record.bussinessclass,jdbcType=INTEGER},
      touristclass = #{record.touristclass,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.test.entity.TicketFlightInfo" >
    update ticket_flight_info
    <set >
      <if test="date != null" >
        date = #{date,jdbcType=DATE},
      </if>
      <if test="flight != null" >
        flight = #{flight,jdbcType=INTEGER},
      </if>
      <if test="cutoff != null" >
        cutoff = #{cutoff,jdbcType=REAL},
      </if>
      <if test="firstclass != null" >
        firstclass = #{firstclass,jdbcType=INTEGER},
      </if>
      <if test="bussinessclass != null" >
        bussinessclass = #{bussinessclass,jdbcType=INTEGER},
      </if>
      <if test="touristclass != null" >
        touristclass = #{touristclass,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.test.entity.TicketFlightInfo" >
    update ticket_flight_info
    set date = #{date,jdbcType=DATE},
      flight = #{flight,jdbcType=INTEGER},
      cutoff = #{cutoff,jdbcType=REAL},
      firstclass = #{firstclass,jdbcType=INTEGER},
      bussinessclass = #{bussinessclass,jdbcType=INTEGER},
      touristclass = #{touristclass,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
      select * from ticket_flight_info
    </select>
  <select id="count" resultType="java.lang.Integer">
    select count(*) from ticket_flight_info
  </select>
  <select id="selectByDate" resultMap="BaseResultMap">
  select * from ticket_flight_info where date = #{date,jdbcType=DATE}
</select>
</mapper>
