<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.test.dao.TicketFlightTouristMapper" >
  <resultMap id="BaseResultMap" type="com.cn.test.entity.TicketFlightTourist" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="nationality" property="nationality" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="cert_name" property="certName" jdbcType="VARCHAR" />
    <result column="cert_no" property="certNo" jdbcType="VARCHAR" />
    <result column="insurance" property="insurance" jdbcType="VARCHAR" />
    <result column="identity" property="identity" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, type, nationality, gender, cert_name, cert_no, insurance,identity
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from ticket_flight_tourist
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ticket_flight_tourist
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" parameterType="com.cn.test.entity.TicketFlightTourist" keyProperty="id">
    insert into ticket_flight_tourist (id, name, type,
      nationality, gender, cert_name,
      cert_no, insurance,identity)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
      #{nationality,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, #{certName,jdbcType=VARCHAR},
      #{certNo,jdbcType=VARCHAR}, #{insurance,jdbcType=VARCHAR}, #{identity,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.test.entity.TicketFlightTourist" >
    insert into ticket_flight_tourist
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="nationality != null" >
        nationality,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="certName != null" >
        cert_name,
      </if>
      <if test="certNo != null" >
        cert_no,
      </if>
      <if test="insurance != null" >
        insurance,
      </if>
      <if test="identity != null" >
        identity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="nationality != null" >
        #{nationality,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="certName != null" >
        #{certName,jdbcType=VARCHAR},
      </if>
      <if test="certNo != null" >
        #{certNo,jdbcType=VARCHAR},
      </if>
      <if test="insurance != null" >
        #{insurance,jdbcType=VARCHAR},
      </if>
      <if test="identity != null" >
        identity,
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.test.entity.TicketFlightTourist" >
    update ticket_flight_tourist
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="nationality != null" >
        nationality = #{nationality,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="certName != null" >
        cert_name = #{certName,jdbcType=VARCHAR},
      </if>
      <if test="certNo != null" >
        cert_no = #{certNo,jdbcType=VARCHAR},
      </if>
      <if test="insurance != null" >
        insurance = #{insurance,jdbcType=VARCHAR},
      </if>
      <if test="identity != null" >
        identity = #{identity,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.test.entity.TicketFlightTourist" >
    update ticket_flight_tourist
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      nationality = #{nationality,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      cert_name = #{certName,jdbcType=VARCHAR},
      cert_no = #{certNo,jdbcType=VARCHAR},
      insurance = #{insurance,jdbcType=VARCHAR},
      identity = #{identity,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
      select * from ticket_flight_tourist
    </select>
  <select id="count" resultType="java.lang.Integer">
    select count(*) from ticket_flight_tourist
  </select>
</mapper>
