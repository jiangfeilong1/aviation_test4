<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.test.dao.TicketFlightConfigMapper" >
  <resultMap id="BaseResultMap" type="com.cn.test.entity.TicketFlightConfig" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="kiddiscount" property="kiddiscount" jdbcType="REAL" />
    <result column="infantdiscount" property="infantdiscount" jdbcType="REAL" />
    <result column="aerodromefee" property="aerodromefee" jdbcType="INTEGER" />
    <result column="oilfee" property="oilfee" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, kiddiscount, infantdiscount, aerodromefee, oilfee
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cn.test.entity.TicketFlightConfigExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ticket_flight_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from ticket_flight_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ticket_flight_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cn.test.entity.TicketFlightConfigExample" >
    delete from ticket_flight_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cn.test.entity.TicketFlightConfig" >
    insert into ticket_flight_config (id, kiddiscount, infantdiscount,
      aerodromefee, oilfee)
    values (#{id,jdbcType=INTEGER}, #{kiddiscount,jdbcType=REAL}, #{infantdiscount,jdbcType=REAL},
      #{aerodromefee,jdbcType=INTEGER}, #{oilfee,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cn.test.entity.TicketFlightConfig" >
    insert into ticket_flight_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="kiddiscount != null" >
        kiddiscount,
      </if>
      <if test="infantdiscount != null" >
        infantdiscount,
      </if>
      <if test="aerodromefee != null" >
        aerodromefee,
      </if>
      <if test="oilfee != null" >
        oilfee,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="kiddiscount != null" >
        #{kiddiscount,jdbcType=REAL},
      </if>
      <if test="infantdiscount != null" >
        #{infantdiscount,jdbcType=REAL},
      </if>
      <if test="aerodromefee != null" >
        #{aerodromefee,jdbcType=INTEGER},
      </if>
      <if test="oilfee != null" >
        #{oilfee,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cn.test.entity.TicketFlightConfigExample" resultType="java.lang.Integer" >
    select count(*) from ticket_flight_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ticket_flight_config
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.kiddiscount != null" >
        kiddiscount = #{record.kiddiscount,jdbcType=REAL},
      </if>
      <if test="record.infantdiscount != null" >
        infantdiscount = #{record.infantdiscount,jdbcType=REAL},
      </if>
      <if test="record.aerodromefee != null" >
        aerodromefee = #{record.aerodromefee,jdbcType=INTEGER},
      </if>
      <if test="record.oilfee != null" >
        oilfee = #{record.oilfee,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ticket_flight_config
    set id = #{record.id,jdbcType=INTEGER},
      kiddiscount = #{record.kiddiscount,jdbcType=REAL},
      infantdiscount = #{record.infantdiscount,jdbcType=REAL},
      aerodromefee = #{record.aerodromefee,jdbcType=INTEGER},
      oilfee = #{record.oilfee,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.test.entity.TicketFlightConfig" >
    update ticket_flight_config
    <set >
      <if test="kiddiscount != null" >
        kiddiscount = #{kiddiscount,jdbcType=REAL},
      </if>
      <if test="infantdiscount != null" >
        infantdiscount = #{infantdiscount,jdbcType=REAL},
      </if>
      <if test="aerodromefee != null" >
        aerodromefee = #{aerodromefee,jdbcType=INTEGER},
      </if>
      <if test="oilfee != null" >
        oilfee = #{oilfee,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.test.entity.TicketFlightConfig" >
    update ticket_flight_config
    set kiddiscount = #{kiddiscount,jdbcType=REAL},
      infantdiscount = #{infantdiscount,jdbcType=REAL},
      aerodromefee = #{aerodromefee,jdbcType=INTEGER},
      oilfee = #{oilfee,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
      select * from ticket_flight_config
    </select>
  <select id="count" resultType="java.lang.Integer">
    select count(*) from ticket_flight_config
  </select>
</mapper>
